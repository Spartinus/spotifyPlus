//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Jun  3 2014 10:55:11).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Named Structures

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct CacheMigrator {
    struct vector<spotify::desktop::CacheMigrator::Step, std::__1::allocator<spotify::desktop::CacheMigrator::Step>> _field1;
    struct scoped_thread<boost::join_if_joinable> _field2;
    struct atomic<bool> _field3;
};

struct Data;

struct HttpConnectionApple;

struct InteractionType {
    basic_string_a1f69cfb _field1;
};

struct OsxNetworkNotifier {
    CDUnknownFunctionPointerType *_field1;
    struct signal<void (spotify::network::ConnectionType), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::network::ConnectionType)>, boost::function<void (const boost::signals2::connection &, spotify::network::ConnectionType)>, boost::signals2::mutex> _field2;
    struct unique_ptr<spotify::desktop::OsxNetworkNotifier::Data, std::__1::default_delete<spotify::desktop::OsxNetworkNotifier::Data>> _field3;
};

struct ProcessSerialNumber {
    unsigned int _field1;
    unsigned int _field2;
};

struct Step;

struct TrackMetadata;

struct UserIntent {
    basic_string_a1f69cfb _field1;
};

struct atomic<bool> {
    unsigned char _field1;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct scoped_thread<boost::join_if_joinable> {
    struct thread _field1;
};

struct shared_count {
    struct sp_counted_base *pi_;
};

struct shared_ptr<boost::detail::thread_data_base> {
    struct thread_data_base *_field1;
    struct shared_count _field2;
};

struct shared_ptr<boost::signals2::detail::signal_impl<void (spotify::network::ConnectionType), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::network::ConnectionType)>, boost::function<void (const boost::signals2::connection &, spotify::network::ConnectionType)>, boost::signals2::mutex>> {
    struct signal_impl<void (spotify::network::ConnectionType), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::network::ConnectionType)>, boost::function<void (const boost::signals2::connection &, spotify::network::ConnectionType)>, boost::signals2::mutex> *_field1;
    struct shared_count _field2;
};

struct shared_ptr<const spotify::desktop::TrackMetadata> {
    struct TrackMetadata *px;
    struct shared_count pn;
};

struct signal<void (spotify::network::ConnectionType), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::network::ConnectionType)>, boost::function<void (const boost::signals2::connection &, spotify::network::ConnectionType)>, boost::signals2::mutex> {
    CDUnknownFunctionPointerType *_field1;
    struct shared_ptr<boost::signals2::detail::signal_impl<void (spotify::network::ConnectionType), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::network::ConnectionType)>, boost::function<void (const boost::signals2::connection &, spotify::network::ConnectionType)>, boost::signals2::mutex>> _field2;
};

struct signal_impl<void (spotify::network::ConnectionType), boost::signals2::optional_last_value<void>, int, std::__1::less<int>, boost::function<void (spotify::network::ConnectionType)>, boost::function<void (const boost::signals2::connection &, spotify::network::ConnectionType)>, boost::signals2::mutex>;

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sp_counted_base;

struct thread {
    struct shared_ptr<boost::detail::thread_data_base> _field1;
};

struct thread_data_base;

struct unique_ptr<spotify::desktop::OsxNetworkNotifier::Data, std::__1::default_delete<spotify::desktop::OsxNetworkNotifier::Data>> {
    struct __compressed_pair<spotify::desktop::OsxNetworkNotifier::Data *, std::__1::default_delete<spotify::desktop::OsxNetworkNotifier::Data>> {
        struct Data *_field1;
    } _field1;
};

struct vector<spotify::desktop::CacheMigrator::Step, std::__1::allocator<spotify::desktop::CacheMigrator::Step>> {
    struct Step *_field1;
    struct Step *_field2;
    struct __compressed_pair<spotify::desktop::CacheMigrator::Step *, std::__1::allocator<spotify::desktop::CacheMigrator::Step>> {
        struct Step *_field1;
    } _field3;
};

struct weak_count {
    struct sp_counted_base *pi_;
};

struct weak_ptr<spotify::http::HttpConnectionApple> {
    struct HttpConnectionApple *px;
    struct weak_count pn;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
} basic_string_a1f69cfb;

typedef struct shared_ptr<const spotify::desktop::TrackMetadata> {
    struct TrackMetadata *px;
    struct shared_count pn;
} shared_ptr_5269cdfc;

typedef struct weak_ptr<spotify::http::HttpConnectionApple> {
    struct HttpConnectionApple *px;
    struct weak_count pn;
} weak_ptr_dde32384;

